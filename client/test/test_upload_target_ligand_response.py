# coding: utf-8

"""
    NoLabs

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nolabs_microservice.models.upload_target_ligand_response import UploadTargetLigandResponse

class TestUploadTargetLigandResponse(unittest.TestCase):
    """UploadTargetLigandResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UploadTargetLigandResponse:
        """Test UploadTargetLigandResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UploadTargetLigandResponse`
        """
        model = UploadTargetLigandResponse()
        if include_optional:
            return UploadTargetLigandResponse(
                ligand_meta_data = nolabs_microservice.models.ligand_meta_data.LigandMetaData(
                    ligand_id = null, 
                    ligand_name = null, 
                    description = null, 
                    link = null, 
                    image = null, )
            )
        else:
            return UploadTargetLigandResponse(
                ligand_meta_data = nolabs_microservice.models.ligand_meta_data.LigandMetaData(
                    ligand_id = null, 
                    ligand_name = null, 
                    description = null, 
                    link = null, 
                    image = null, ),
        )
        """

    def testUploadTargetLigandResponse(self):
        """Test UploadTargetLigandResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
