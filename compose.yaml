services:
  prefect-server:
    image: 'prefecthq/prefect:3-python3.12-kubernetes'
    command: prefect server start
    env_file:
      - nolabs/infrastructure/.env
    network_mode: host
  mongo:
    image: 'mongo:latest'
    network_mode: host
  redis:
    image: 'redis:latest'
    network_mode: host
  conformations:
    image: 'ghcr.io/basedlabs/conformations:1.1.0'
    network_mode: host
    build:
      context: microservices/conformations
      dockerfile: build/Dockerfile
    command: --host=0.0.0.0 --port=5785
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
  esmfold:
    image: 'ghcr.io/basedlabs/esmfold:1.0.0'
    network_mode: host
    build:
      context: microservices/esmfold
      dockerfile: build/Dockerfile
    command: --host=0.0.0.0 --port=5736
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
  esmfold_light:
    image: 'ghcr.io/basedlabs/esmfold-light:1.0.0'
    network_mode: host
    command: python api.py
    build:
      context: nolabs/microservices/esmfold_light
      dockerfile: build/Dockerfile
    env_file:
      - nolabs/microservices/esmfold_light/service/.env
  solubility:
    image: 'ghcr.io/basedlabs/solubility:1.1.0'
    network_mode: host
    build:
      context: microservices/solubility
      dockerfile: build/Dockerfile
    command: --host=0.0.0.0 --port=5786
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
  protein_design:
    image: 'ghcr.io/basedlabs/protein-design:1.1.0'
    network_mode: host
    build:
      context: microservices/protein_design
      dockerfile: build/Dockerfile
    command: --host=0.0.0.0 --port=5789
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
  localisation:
    image: 'ghcr.io/basedlabs/localisation:1.1.0'
    network_mode: host
    build:
      context: microservices/localisation
      dockerfile: build/Dockerfile
    command: --host=0.0.0.0 --port=5787
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
  gene_ontology:
    image: 'ghcr.io/basedlabs/gene-ontology:1.1.0'
    network_mode: host
    build:
      context: microservices/gene_ontology
      dockerfile: build/Dockerfile
    command: --host=0.0.0.0 --port=5788
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
  diffdock:
    image: 'ghcr.io/basedlabs/diffdock:2.0.1'
    network_mode: host
    build:
      context: nolabs/microservices/diffdock
      dockerfile: build/Dockerfile
    command: python api.py
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
    env_file:
      - nolabs/microservices/diffdock/service/.env
    volumes:
      - ${DIFFDOCK_WEIGHTS_LOCATION}:/app/DiffDock/esm/model_weights/.cache/torch/hub/checkpoints
  p2rank:
    image: 'ghcr.io/basedlabs/p2rank:1.0.0'
    network_mode: host
    build:
      context: microservices/p2rank
      dockerfile: build/Dockerfile
    command: --host=0.0.0.0 --port=5731
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
  msa_light:
    image: 'ghcr.io/basedlabs/msa-light:1.0.0'
    network_mode: host
    build:
      context: microservices/msa_light
      dockerfile: build/Dockerfile
    command: --host=0.0.0.0 --port=5734
  external_data_query:
    image: 'ghcr.io/basedlabs/external-data-query:1.0.3'
    network_mode: host
    build:
      context: microservices/external_data_query
      dockerfile: build/Dockerfile
    command: --host=0.0.0.0 --port=5739
  biobuddy:
    image: 'ghcr.io/basedlabs/biobuddy:1.2.1'
    network_mode: host
    build:
      context: microservices/biobuddy
      dockerfile: build/Dockerfile
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
    command: --host=0.0.0.0 --port=5738
  rosettafold:
    image: 'ghcr.io/basedlabs/rosettafold:1.0.1'
    network_mode: host
    build:
      context: microservices/rosettafold
      dockerfile: build/Dockerfile
    volumes:
      - ${ROSETTAFOLD_BFD_PATH}:/RoseTTAFold/bfd
      - ${ROSETTAFOLD_PDB_PATH}:/RoseTTAFold/pdb100_2021Mar03
      - ${ROSETTAFOLD_UNIREF_PATH}:/RoseTTAFold/UniRef30_2020_06
    command: --host=0.0.0.0 --port=5737
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
  reinvent:
    image: 'ghcr.io/basedlabs/reinvent:1.0.1'
    network_mode: host
    build:
      context: nolabs/microservices/reinvent
      dockerfile: build/Dockerfile
    command: python api.py
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
    env_file:
      - nolabs/microservices/reinvent/service/.env
    volumes:
      - ${NOLABS_HOME}/reinvent/jobs_configs:/app/service/reinvent_configs/jobs_configs # nolabs.env.NOLABS_REINVENT_DIRECTORY / reinvent.env.CONFIGS_DIRECTORY
  blast_query:
    image: 'ghcr.io/basedlabs/blast_query:1.0.0'
    network_mode: host
    build:
      context: microservices/blast_query
      dockerfile: build/Dockerfile
    command: --host=0.0.0.0 --port=5740 --workers=1
  nolabs:
    image: 'ghcr.io/basedlabs/nolabs:2.1.8'
    network_mode: host
    build:
      context: .
      dockerfile: build/Dockerfile
    environment:
      - ENABLE_BIOBUDDY=${ENABLE_BIOBUDDY:-false}
    command: --host=0.0.0.0
